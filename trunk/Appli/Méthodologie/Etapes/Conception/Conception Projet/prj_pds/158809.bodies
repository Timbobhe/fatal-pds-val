class Client
!!!161753.java!!!	main(inout args : String) : void
	try {
		
		 socket=new Socket("localhost", port);
		
		send=new ObjectOutputStream(socket.getOutputStream());
		read=new ObjectInputStream(socket.getInputStream());
		 
		send.writeObject("REQUEST");
	
		while (!((String)read.readObject()).equals("RESPONSE")) {
			try {
				Thread.sleep(10);
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
		}
		EffecteurLigne effA = new EffecteurLigne(-400,1,5);
		
		EffecteurLigne effR = new EffecteurLigne(-400,100,5);
	
	
		EffecteurLigne efftab[] = {effA,effR};
		EffecteurRame effRame = new EffecteurRame(effA.getLignes(),effR.getLignes(),effA.getListStations(),effR.getListStations());
		Rame rame = new Rame("m√©tro 14",effRame);
		Trajectoire tr = new Trajectoire(efftab,rame);
		rame.getEffecteur().addAbonne(tr);
		
		
		Simulateur  simulateur = new Simulateur("Train", 10, 12);
		MessageModel messageModel = new MessageModel();
		RandomSource randomSource = new RandomSource();
        Position pos =new Position(-399,100);
		Position post=new Position();
		int compteur=0;
		
		 while(!rame.getEtat()){try {
				Thread.sleep(10);
			} catch (InterruptedException e) {
				e.printStackTrace();
			}}
		 
	     while( rame.getPosition().getX()!=pos.getX()||
	        		rame.getPosition().getY()!=pos.getY()){
	        	
	        	post=validatePosition(rame.getPosition().getX(),rame.getPosition().getY());	        	
	        	simulateur.setPosXRam(post.getX());
	        	simulateur.setPosYRam(post.getY());
	    		messageModel = simulateur.generateStream();
	    		
	    		if(compteur%10==0){
	    			send.write(testRandom(10,randomSource));
	    		}
	    		compteur++;
		        byte[] binaryMessage= Transformer.transformToBinary(messageModel.toString());
		        send.write(binaryMessage);
		
	    }
	     
	     read.close();	
	     send.close();
	                
	}
	catch (IOException e) {
		e.printStackTrace();
	}
	catch (ClassNotFoundException cnf) {
		
		cnf.printStackTrace();
	}
		

		
!!!161881.java!!!	validatePosition(in x : int, in y : int) : Position
		 
		if(x<0){
			x=x*-1;
			if(x>31){
				x=31;
			}
		}
		if(x>31){
			x=31;
		}
			 
		if(y<0){
			y=y*-1;
			if(y>31){
				y=31;
			}
		}
		if(y>31){
			y=31;
		}
		
		
		return new Position(x,y);
		
		 
!!!162009.java!!!	testRandom(in x : int, inout randomSource : RandomSource) : byte
		String stream = "";
		for(int i = 0; i < x; i++){
			int value = randomSource.randomizeValueOfData(randomSource.getKeys().length);
			stream = randomSource.generateStream(value);
			byte[] trame = Transformer.transformToBinary(stream);
			return trame;
		}
		return null;
